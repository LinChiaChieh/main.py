// CS1410 - Assignment 04

#include <iostream>
#include <sstream>
#include <random>

using namespace std;

enum class DieSide { One, Two, Three, Four, Five, Six };

struct HistBar {
  int count;
  DieSide label;
};

void rollDice(HistBar h[], int n = 1) {
  random_device rd;
  default_random_engine gen(rd());
  uniform_int_distribution<int> dist(1, 6);
  for (int i = 0; i < n; i++) {
    int roll = dist(gen);
    switch (roll) {
      case 1: h[0].count++; break;
      case 2: h[1].count++; break;
      case 3: h[2].count++; break;
      case 4: h[3].count++; break;
      case 5: h[4].count++; break;
      case 6: h[5].count++; break;
    }
  }
}

string histogram(HistBar h[], char c = '*') {
  stringstream ss;
  for (int i = 0; i < 6; i++) {
    ss << h[i].count << " " << static_cast<int>(h[i].label) + 1 << "s: ";
    for (int j = 0; j < h[i].count; j++) {
      ss << c;
    }
    ss << endl;
  }
  return ss.str();
}

void reset(HistBar h[]) {
  for (int i = 0; i < 6; i++) {
    h[i].count = 0;
  }
}

int main() {
  HistBar hist[6] = {
    {0, DieSide::One},
    {0, DieSide::Two},
    {0, DieSide::Three},
    {0, DieSide::Four},
    {0, DieSide::Five},
    {0, DieSide::Six}
  };
  
  int choice;
  do {
    cout << "DICE ROLLING SIMULATION" << endl;
    cout << "=======================" << endl;
    cout << "1. Roll dice" << endl;
    cout << "2. Display histogram" << endl;
    cout << "3. Reset histogram" << endl;
    cout << "4. Quit program" << endl;
    cout << endl << "Enter your choice: ";
    cin >> choice;
    switch (choice) {
      case 1:
        rollDice(hist, 100);
        break;
      case 2:
        cout << histogram(hist);
        break;
      case 3:
        reset(hist);
        break;
      case 4:
        cout << "Exiting program..." << endl;
        break;
      default:
        cout << "Invalid choice. Try again." << endl;
        break;
    }
    cout << endl;
  } while (choice != 4);
  
  return 0;
}
