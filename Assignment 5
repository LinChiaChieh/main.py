#include <iostream.
#include <cmath>
using namespace std;

struct Item{
   double value; // The actual value of the item
   Item* next;   // A pointer to the item beneath
};

struct Stack
{
    Item *top = nullptr; // A pointer to the item at the top
    int size = 0; // How many items are in the stack? 0 if the stack is empty
};

void push(Stack *stack, double num)
{
    Item *temp = stack->top;
    stack->top = new Item;
    stack->top->value = num;
    stack->top->next = temp;
    stack->size++;
}

double pop(Stack *stack)
{
    if (stack->size == 0)
    return HUGE_VAL;
    stack->size--;
    Item *temp = stack->top;
    double ret = stack->top->value;
    stack->top = stack->top->next;
    delete (temp);
    return ret;
}

void printStack(const Stack *stack)
{
    Item *temp = stack->top;
    cout << endl
    << temp->value << "<= TOP" << endl;
    temp = temp->next;
    for (int i = 1; i < stack->size; i++)
    {
        cout << temp->value << endl;
        temp = temp->next;
    }
    cout << "-- " << stack->size << " items found\n\n";
}

int main()
{
    Stack first;
    push(&first, 20.5);
    push(&first, 60.004);
    push(&first, 10.08);
    push(&first, 40.03);
    push(&first, -160.93);
    printStack(&first);
    double top = pop(&first);
    cout << "Popped item: " << top << endl;
    printStack(&first);
}
